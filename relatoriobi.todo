Planejamento:
  ☐ Fazer um mockup
  ☐ Fazer uma estrutura para o WHERE
  ☐ Problema: Listar todos os crc que aconteceram em um intervalo

✔ v0:Fazer um hello world com a framework angular-chart.js: @done (18-01-28 13:02)
  - URL: http://localhost:8080/sol/relatorios/v0
  - http://jtblin.github.io/angular-chart.js/#reactive
  - public/sol/relatorios/cliente/teste-chart.js
  - public/sol/relatorios/cliente/teste-chart.html

v1: Listar todos os crc que aconteceram:
  - URL: http://localhost:8080/sol/relatorios/v1
  ✔ Fazer um select com lan_remessa(ENDPOINT) @done (18-01-28 13:45)
      SELECT 
          lr.id as crc, p.id as cliente_numero, p.nome as cliente_nome
      FROM 
          lan_remessa lr 
              INNER JOIN 
          participante p ON lr.cliente_id = p.id 
       WHERE p.id = 18; 
      
  ✔ Fazer uma estrutura do select @done (18-01-28 18:45)


Layout:
  - Escolher o CUBO
    - Escolher as colunas



 ORGANIZAR A PARTE DE BAIXO:
Relatorios:
=======
Planejamento - Menu da esquerda:
  - Criar uma tabela com os metadados
    - Tabela metadados  (nome, tipo, json, sql)
      - json:
        - vazio ------- -1
        - enum --------- 0
        - data --------- 1
        - dinheiro ----- 2
        - hora --------- 3
        - lista -------- 4
        - peso --------- 5
        - metrica ------ 6 //fn:0, //sum,max,min,avg
        - filtro ------- 7


      var cubo = [{
        coluna: "id",
        alias: "CRC",
        tipo: -1
      }, {
        coluna: "origem",
        alias: "Oridem do CRC",
        enum: [{
          sigla: "r",
          nome: "Remessa"
        }, {
          sigla: "c",
          nome: "CRC"
        }],
        tipo: 0
      }, {
        coluna: "finalizado_remessa",
        alias: "Remessa finalizada?",
        enum: [{
          sigla: "s",
          nome: "Sim"
        }, {
          sigla: "n",
          nome: "Não"
        }],
        tipo: 0
      }, {
        coluna: "finalizado_crc",
        alias: "CRC finalizado ?",
        enum: [{
          sigla: "s",
          nome: "Sim"
        }, {
          sigla: "n",
          nome: "Não"
        }],
        tipo: 0
      }, {
        coluna: "documento_fiscal",
        alias: "Documento Fiscal",
        enum: [{
          sigla: "n",
          nome: "NFS-e"
        }, {
          sigla: "c",
          nome: "CT-e"
        }],
        tipo: 0
      }, {
        coluna: "setor",
        colunaKey: "setor_id",
        alias: "Setor",
        lista: {
          tabela: "setor",
          coluna: ["nome"],
          where: ["checkbox = 's'"]
        },
        tipo: 4
      }, {
        colunaKey: "cliente_id",
        coluna: "cliente",
        alias: "Cliente"
        lista: {
          tabela: "participante",
          coluna: ["nome"],
          where: ["cliente = 's'"]
        },
        tipo: 4
      }, {
        coluna:"cidade",
        colunaKey: "localidade_id",
        alias: "Cidade",
        lista: {
          tabela: "localidade",
          coluna: ["cidade"]
        },
        tipo: 4
      }, {
        coluna: "estado",
        alias: "Estado",
        colunaKey: "estado_id",
        lista: {
          tabela: "estado",
          coluna: ["nome"]
        },
        tipo: 4
      }, {
        coluna: "remessa_id",
        alias: "Remessa",
        tipo: -1
      }, {
        colunaKey: "destinatario_id",
        coluna:"destinatario",
        alias: "Destinatário",
        lista: {
          tabela: "participante",
          coluna: ["nome"],
          where: ["cliente = 's'"]
        },
        tipo: 4
      }, {
        colunaKey: "entrega_id",
        coluna: "entrega",
        alias: "Entrega",
        lista: {
          tabela: "registro",
          coluna: ["nome"],
          where: ["tipo = 'entrega'"]
        },
        tipo: 4
      }, {
        colunaKey: "pagamento_id",
        alias: "Pagamento",
        coluna: "pagamento",
        lista: {
          tabela: "registro",
          coluna: ["nome"],
          where: ["tipo = 'pagamento'"]
        },
        tipo: 4
      }, {
        coluna: "tarifa_id", 
        alias: "Tarifa",
        lista: {
          tabela: "tarifa_nome",
          coluna: ["nome"]
        },
        tipo: 4
      }, {
        coluna: "dataremessa",
        data: null,
        tipo: 1
      }, {
        coluna: "horacoleta",
        hora: null,
        tipo: 3
      }, {
        coluna: "horaemissao",
        hora: null,
        tipo: 3
      }, {
        colunaKey: "prazo_id",
        coluna:"prazo"
        alias: "Prazo",
        lista: {
          tabela: "registro",
          coluna: ["nome"],
          where: ["tipo = 'entrega'"]
        },
        tipo: 4
      }, {
        coluna: "dataentrega_prevista",
        data: null,
        tipo: 1
      }, {
        coluna: "horaentrega_realizada",
        hora: null,
        tipo: 3
      }, {
        coluna: "volumes",
        alias: "Volumes",
        tipo: -1
      }, {
        coluna: "pesoreal",
        peso: null,
        tipo: 5
      }, {
        coluna: "pesotaxado",
        peso: null,
        tipo: 5
      }, {
        coluna: "nota_fiscal",
        alias: "Nota Fiscal",
        tipo: -1
      }, {
        coluna: "valor_declarado",
        tipo: 2
      }, {
        coluna: "valor_envio",
        alias: "Valor do Envio",
        dinheiro: null,
        tipo: 2
      }, {
        colunaKey: "conteudo_id",
        coluna: "conteudo",
        alias: "Conteúdo",
        lista: {
          tabela: "registro",
          coluna: ["nome"],
          where: ["tipo = 'conteudo'"]
        },
        tipo: 4
      }, {
        colunaKey: "embalagem_id",
        coluna: "embalagem",
        alias: "Embalagem",
        lista: {
          tabela: "registro",
          coluna: ["nome"],
          where: ["tipo = 'emabalagem'"]
        },
        tipo: 4
      }, {
        coluna: "responsavel_remessa",
        alias: "Responsável Remessa",
        lista: {
          tabela: "user",
          coluna: ["nome"]
        },
        tipo: 4
      }, {
        coluna: "responsavel_crc",
        alias: "Responsável CRC",
        lista: {
          tabela: "user",
          coluna: ["nome"]
        },
        tipo: 4
      }, {
        coluna: "responsavel_entrega",
        alias: "Responsável Entega",
        lista: {
          tabela: "user",
          coluna: ["name"]
        },
        tipo: 4
      }, {
        coluna: "comprovante",
        tipo: -1
      }, {
        coluna: "recebedor_nome",
        tipo: -1
      }, {
        coluna: "recebedor_doc_tipo",
        enum: [{
          sigla: "c",
          nome: "C"
        }, {
          sigla: "r",
          nome: "R"
        }, {
          sigla: "m",
          nome: "M"
        }],
        tipo: 0
      }, {
        coluna: "recebedor_doc",
        tipo: -1
      }, {
        coluna: "obs_remessa",
        alias: "Observações para Remessa",
        tipo: -1
      }, {
        coluna: "obs_crc",
        alias: "Observações para CRC",
        tipo: -1
      }, {
        coluna: "obs_entrega",
        alias: "Observações",
        tipo: -1
      }, {
        coluna: "faturamento_id",
        lista: {
          tabela: "faturamento",
          coluna: ["fatura"],
          where: ["tipo = 'c'"]
        },
        tipo: 4
      }, {
        coluna: "dataReg",
        alias: "Data de criação",
        data: null,
        tipo: 1
      }, {
        metrica: "m1",
        fn: 0,
        tipo: 6
      }];


sql:
  SELECT 
  lan_remessa.localidade_id,
    lan_remessa.id,
    lan_remessa.origem,
    lan_remessa.finalizado_remessa,
    lan_remessa.finalizado_crc,
    lan_remessa.documento_fiscal,
    lan_remessa.setor_id,
    lan_remessa.cliente_id,
    lan_remessa.localidade_id,
    lan_remessa.remessa_id,
    lan_remessa.destinatario_id,
    lan_remessa.entrega_id,
    lan_remessa.pagamento_id,
    lan_remessa.tarifa_id,
    lan_remessa.dataremessa,
    lan_remessa.horacoleta,
    lan_remessa.horaemissao,
    lan_remessa.prazo as prazo_id,
    lan_remessa.dataentrega_prevista,
    lan_remessa.horaentrega_realizada,
    lan_remessa.volumes,
    lan_remessa.pesoreal,
    lan_remessa.pesotaxado,
    lan_remessa.nota_fiscal,
    lan_remessa.valor_declarado,
    lan_remessa.valor_envio,
    lan_remessa.conteudo_id,
    lan_remessa.embalagem_id,
    lan_remessa.responsavel_remessa,
    lan_remessa.responsavel_crc,
    lan_remessa.responsavel_entrega,
    lan_remessa.comprovante,
    lan_remessa.recebedor_nome,
    lan_remessa.recebedor_doc_tipo,
    lan_remessa.recebedor_doc,
    lan_remessa.obs_remessa,
    lan_remessa.obs_crc,
    lan_remessa.obs_entrega,
    lan_remessa.faturamento_id,
    lan_remessa.faturamento_marca,
    lan_remessa.dataReg,
    setor.nome as setor,
    cliente.nome as cliente,
    localidade.estado_id,
    estado.nome as estado,
    destinatario.nome as destinatario,
    entrega.nome as entrega,
    pagamento.nome as pagamento,
    prazo.nome as prazo,
    conteudo.nome as conteudo,
    embalagem.nome as embalagem,
    tarifa_nome.nome as tarifa
FROM
    lan_remessa
INNER JOIN setor ON setor.id = lan_remessa.setor_id
INNER JOIN participante cliente ON cliente.id = lan_remessa.cliente_id
INNER JOIN localidade ON localidade.id = lan_remessa.localidade_id
INNER JOIN estado ON estado.id = localidade.estado_id
INNER JOIN participante destinatario ON destinatario.id = lan_remessa.destinatario_id
INNER JOIN registro entrega ON entrega.id = lan_remessa.entrega_id
INNER JOIN registro pagamento ON pagamento.id = lan_remessa.pagamento_id
INNER JOIN registro prazo ON prazo.id = lan_remessa.prazo
INNER JOIN registro conteudo ON conteudo.id = lan_remessa.conteudo_id
INNER JOIN registro embalagem ON embalagem.id = lan_remessa.embalagem_id
INNER JOIN tarifa ON tarifa.id = lan_remessa.tarifa_id
INNER JOIN tarifa_nome ON tarifa.tarifa_nome_id = tarifa_nome.id;


Futuro:
  ☐ Remover linha especifica





apresentaçaõ:
  ☐ Ilha(excel)
  ☐ Monitoramento(dashboard) - socket io
    ☐ Prestador crc
    ☐ faturamento transportadora
  ☐ Datareg - Quando um registro e cridao para nao fecvhar o mes e aparecer coisa louca
  ☐ Pesquisar grafico de venda , receita x custo, distribuição
  ☐ Biblioteca chart.js
  ☐ Euer vai administrar quem pode acessar o que
  ☐ Tem mais usuario no sol do que no sankhya
 ☐ Cliente vem reclamar que ta muito caro() mostra o custo. achar outras informações quando a transportadora reclamar
 ☐ Cliente vem reclamar que ta muito caro() mostra o custo.
 ☐ Curva ABC(https://pt.stackoverflow.com/questions/131869/como-funciona-o-select-sumif)
 ☐ Evoluçao de uma variavel no tempo
 ☐ mapa
 ☐ curva ABC

Relatorios:
  ☐ [INF] Quando faz o faturamento da transportadora algumas informaçoes do CRC são consertadas
  ✔ Levantar todas as variaveis dos relatios. @prioridade alta @done (18-01-20 17:36)
  ✔ Levantar frameworks graficos que possuem suporte para ionic - Angular-nvD3 @prioridade baixa @done (18-01-20 17:41)
  ☐ Pesquisar grafico de venda , receita x custo, distribuição
  ☐ MVP 
    - Abrir um modal ao clicar no filter
    ✔ Colocar D3 dentro do angular @done (18-01-21 09:45)
    ✔ CUBO:Serviço especial (usuario escolhe as colunas) @done (18-01-21 09:45)
    ✔ Grafico de barra @done (18-01-21 09:45)
    - agrupar por qualquer coluna
    - Criação da dashboard: https://www.youtube.com/watch?v=MF4-7oZYab0&t=2m45s
    - Dashboard: http://wrapbootstrap.com/preview/WB0696K5S
    - Fixar a quantidade de espaço para graficos
    - Colocar a mudança de escopo de serviço especial
    - D3 bib :http://krispo.github.io/angular-nvd3/#/quickstart

  ☐ Depois de fazer o MVp pensar na apresentaçao e depois fazer
    - Alguem inseriu algo no mes passado(dataReg)? mandar um email 
    - Alguem inseriu um crc com preço errado? prestador errado?
    - Custo por cliente do carro
    - Cliente vem reclamar que ta muito caro() mostra o custo. achar outras informações quando a transportadora reclamar
    - Cliente vem reclamar que ta muito caro() mostra o custo.
    - Curva ABC(https://pt.stackoverflow.com/questions/131869/como-funciona-o-select-sumif)
    - Evoluçao de uma variavel no tempo
    
Vantagen:
  -Unificação das bases de dados(shankya + sgf + sol)
  - Quando a transportadora chegava para auemntar o preço alguem pecisa fazer um relatorio assim nao precisa mais
  - Cada pessoa tem seu dado(rodrigo chama de ilha), dessa forma agrupa todos os dados

  Prioridade Baixa(Deixar no layt para apresentar mesmo não funcionado):
  ☐ Organizar as colunas
  ☐ Colocar mapa 
  ☐ Fazer group by
  ☐ Fazer uma planilha com a tabela veiculos
  ☐ Ao clicar vai para o CRC 
  ☐ ZOOM IN, ZOOM OUT 
  ☐ Adicionar os filtros no relatorio(por exemplo transportadora)
  ☐ Tela com os relatorios da pessoa (amaretti email)
  ☐ compartilhar o relatorio
  ☐ Tela de login no ionic
  ☐ Socket para ter tempo rela no relatorios 
  ☐ Adicionar uma planilha para fazer o estudo E conexao com o shankya 
  ☐ Compartilhar relatorio 
  ☐ Ao adicionar o painel ele insere o tamanho 
  ☐ colocar painel com wysiwyg https://foxythemes.net/preview/products/amaretti-v1.4.1/form-wysiwyg.php 
  ☐ Visualizar na tela de dashboard 
  ☐ Fazer metrica(Coluna valor > 5000)
  ☐ Fazer um filtro antes, pq senao vai trazer muita coisa(1 milhao de linhas) ou coloca paginação(Smart table com intervalo de data)
  ☐ Multiplos graficos em uma tela (http://krispo.github.io/angular-nvd3/#/lineChart)
  ☐ injetar o arquivo deletar.js
  ☐ SOMENTE O EULER TEM PERMISSAO PARA FAZER RELATORIO, APOS FAZER O RELATORIO MANDA PARA A PESSOA.
  ☐ Colocar o options dentro do banco e quando for chamar ele, buscar do banco, assim e possivel fazer um parser nele
  ☐ Exportar para excel
  ☐ Curva ABC - http://bl.ocks.org/daluu/d43ec5e610dd5dedbbe1
  ☐ Grafico filtrar a planilha

  Criação da dashboard: https://www.youtube.com/watch?v=MF4-7oZYab0&t=2m45s :
    ☐ Colocar o link
    ☐ Criar a estrutra com o grid


  Levantar todas as variaveis dos relatios 1700 a 1728: 

      Relatório analítico comparativo de vendas:
        ☐ Igual ao sintetico: agrupa crc por tarifario

      Relatório sintético comparativo de vendas:
          ☐ CRC 
            ☐ Origem
            ☐ origem
            ☐ volumes
            ☐ peso real
            ☐ peso taxado
            ☐ valor do envio
            ☐ serviço adicionais
            ☐ total
            ☐ custo transportadora
            ☐ custo prestador de serviço
            ☐ custo roterização
          ☐ Rotas
            ☐ Localidade
            ☐ Rota
            ☐ custo prestador de serviço
            ☐ custo agregado
            ☐ custo fornecedor
          ☐ Serviços especias:
            ☐ Localidade
            ☐ custo prestador de serviço
            ☐ custo fornecedor
          ☐ Custos adicionais(Fornecedor)
            ☐ Localidade
            ☐ Nome
            ☐ Valor
          ☐ Distribuição de receitas x custos por localidade
            ☐ localidade 
            ☐ Vendas: CRC, Rotas,Serviços especiais
            ☐ Custos: Transportadora, prestador de serviço, agregado , fornecedor, roteirização

      Relatório consolidado comparativo de vendas:
        ☐ Resumo do Relatório analítico comparativo de vendas

      Relatório consolidado sintético de vendas:
        ☐ Resumo do Relatório sintético comparativo de vendas

      Relatório analítico/sintetico de vendas por localidade:
          ☐ Igual ao relatório analítico comparativo de vendas sem o custo
          ☐ CRC (agrupa por tarifario)
            ☐ Origem
            ☐ origem
            ☐ volumes
            ☐ peso real
            ☐ peso taxado
            ☐ valor do envio
            ☐ serviço adicionais
            ☐ total
          ☐ Rotas
            ☐ Localidade
            ☐ Rota
          ☐ Serviços especias:
            ☐ Localidade
          ☐ Custos adicionais(Fornecedor)
            ☐ Localidade
            ☐ Nome
            ☐ Valor

      Relatório analítico de vendas por localidade - CT-e:

      Relatório analítico/sintético de vendas por participante:

      Relatório analítico de vendas - CT-e SOL 2.0:




Fazer a curva ABC por receita cliente:
  ☐ Faz o menu esquerdo com uma drop lista com os cubos